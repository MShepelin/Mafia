# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mafia_pb2 as mafia__pb2


class MafiaServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReceiveUpdates = channel.unary_stream(
                '/mafia.MafiaServer/ReceiveUpdates',
                request_serializer=mafia__pb2.UpdatesRequest.SerializeToString,
                response_deserializer=mafia__pb2.Update.FromString,
                )
        self.FindGame = channel.unary_unary(
                '/mafia.MafiaServer/FindGame',
                request_serializer=mafia__pb2.GameRequest.SerializeToString,
                response_deserializer=mafia__pb2.GameSearchResponse.FromString,
                )
        self.SendChatMessage = channel.unary_unary(
                '/mafia.MafiaServer/SendChatMessage',
                request_serializer=mafia__pb2.ChatMessageRequest.SerializeToString,
                response_deserializer=mafia__pb2.RequestProcessStatus.FromString,
                )
        self.LeaveGame = channel.unary_unary(
                '/mafia.MafiaServer/LeaveGame',
                request_serializer=mafia__pb2.GameRequest.SerializeToString,
                response_deserializer=mafia__pb2.RequestProcessStatus.FromString,
                )


class MafiaServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReceiveUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendChatMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReceiveUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.ReceiveUpdates,
                    request_deserializer=mafia__pb2.UpdatesRequest.FromString,
                    response_serializer=mafia__pb2.Update.SerializeToString,
            ),
            'FindGame': grpc.unary_unary_rpc_method_handler(
                    servicer.FindGame,
                    request_deserializer=mafia__pb2.GameRequest.FromString,
                    response_serializer=mafia__pb2.GameSearchResponse.SerializeToString,
            ),
            'SendChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendChatMessage,
                    request_deserializer=mafia__pb2.ChatMessageRequest.FromString,
                    response_serializer=mafia__pb2.RequestProcessStatus.SerializeToString,
            ),
            'LeaveGame': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveGame,
                    request_deserializer=mafia__pb2.GameRequest.FromString,
                    response_serializer=mafia__pb2.RequestProcessStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mafia.MafiaServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MafiaServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReceiveUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mafia.MafiaServer/ReceiveUpdates',
            mafia__pb2.UpdatesRequest.SerializeToString,
            mafia__pb2.Update.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.MafiaServer/FindGame',
            mafia__pb2.GameRequest.SerializeToString,
            mafia__pb2.GameSearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.MafiaServer/SendChatMessage',
            mafia__pb2.ChatMessageRequest.SerializeToString,
            mafia__pb2.RequestProcessStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LeaveGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.MafiaServer/LeaveGame',
            mafia__pb2.GameRequest.SerializeToString,
            mafia__pb2.RequestProcessStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
